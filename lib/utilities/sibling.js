"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNextSibling = getNextSibling;
exports.getPreviousSibling = getPreviousSibling;

function getNextSibling(element) {
  var nextSibling = null;
  var siblings = element.parent.children; ///

  backwardsSome(siblings, function (sibling) {
    if (sibling === element) {
      return true;
    }

    nextSibling = sibling;
  });
  return nextSibling;
}

function getPreviousSibling(element) {
  var previousSibling = null;
  var siblings = element.parent.children; ///

  forwardsSome(siblings, function (sibling) {
    if (sibling === element) {
      return true;
    }

    previousSibling = sibling;
  });
  return previousSibling;
}

function forwardsSome(array, test) {
  var arrayLength = array.length,
      lastIndex = arrayLength - 1;

  for (var index = 0; index <= lastIndex; index++) {
    var element = array[index],
        result = test(element, index);

    if (result) {
      return true;
    }
  }

  return false;
}

function backwardsSome(array, test) {
  var arrayLength = array.length,
      lastIndex = arrayLength - 1;

  for (var index = lastIndex; index >= 0; index--) {
    var element = array[index],
        result = test(element, index);

    if (result) {
      return true;
    }
  }

  return false;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpYmxpbmcuanMiXSwibmFtZXMiOlsiZ2V0TmV4dFNpYmxpbmciLCJlbGVtZW50IiwibmV4dFNpYmxpbmciLCJzaWJsaW5ncyIsInBhcmVudCIsImNoaWxkcmVuIiwiYmFja3dhcmRzU29tZSIsInNpYmxpbmciLCJnZXRQcmV2aW91c1NpYmxpbmciLCJwcmV2aW91c1NpYmxpbmciLCJmb3J3YXJkc1NvbWUiLCJhcnJheSIsInRlc3QiLCJhcnJheUxlbmd0aCIsImxlbmd0aCIsImxhc3RJbmRleCIsImluZGV4IiwicmVzdWx0Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFFTyxTQUFTQSxjQUFULENBQXdCQyxPQUF4QixFQUFpQztBQUN0QyxNQUFJQyxXQUFXLEdBQUcsSUFBbEI7QUFFQSxNQUFNQyxRQUFRLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixDQUFlQyxRQUFoQyxDQUhzQyxDQUdJOztBQUUxQ0MsRUFBQUEsYUFBYSxDQUFDSCxRQUFELEVBQVcsVUFBQ0ksT0FBRCxFQUFhO0FBQ25DLFFBQUlBLE9BQU8sS0FBS04sT0FBaEIsRUFBeUI7QUFDdkIsYUFBTyxJQUFQO0FBQ0Q7O0FBRURDLElBQUFBLFdBQVcsR0FBR0ssT0FBZDtBQUNELEdBTlksQ0FBYjtBQVFBLFNBQU9MLFdBQVA7QUFDRDs7QUFFTSxTQUFTTSxrQkFBVCxDQUE0QlAsT0FBNUIsRUFBcUM7QUFDMUMsTUFBSVEsZUFBZSxHQUFHLElBQXRCO0FBRUEsTUFBTU4sUUFBUSxHQUFHRixPQUFPLENBQUNHLE1BQVIsQ0FBZUMsUUFBaEMsQ0FIMEMsQ0FHQTs7QUFFMUNLLEVBQUFBLFlBQVksQ0FBQ1AsUUFBRCxFQUFXLFVBQUNJLE9BQUQsRUFBYTtBQUNsQyxRQUFJQSxPQUFPLEtBQUtOLE9BQWhCLEVBQXlCO0FBQ3ZCLGFBQU8sSUFBUDtBQUNEOztBQUVEUSxJQUFBQSxlQUFlLEdBQUdGLE9BQWxCO0FBQ0QsR0FOVyxDQUFaO0FBUUEsU0FBT0UsZUFBUDtBQUNEOztBQUVELFNBQVNDLFlBQVQsQ0FBc0JDLEtBQXRCLEVBQTZCQyxJQUE3QixFQUFtQztBQUNqQyxNQUFNQyxXQUFXLEdBQUdGLEtBQUssQ0FBQ0csTUFBMUI7QUFBQSxNQUNNQyxTQUFTLEdBQUdGLFdBQVcsR0FBRyxDQURoQzs7QUFHQSxPQUFLLElBQUlHLEtBQUssR0FBRyxDQUFqQixFQUFvQkEsS0FBSyxJQUFJRCxTQUE3QixFQUF3Q0MsS0FBSyxFQUE3QyxFQUFpRDtBQUMvQyxRQUFNZixPQUFPLEdBQUdVLEtBQUssQ0FBQ0ssS0FBRCxDQUFyQjtBQUFBLFFBQ01DLE1BQU0sR0FBR0wsSUFBSSxDQUFDWCxPQUFELEVBQVVlLEtBQVYsQ0FEbkI7O0FBR0EsUUFBSUMsTUFBSixFQUFZO0FBQ1YsYUFBTyxJQUFQO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPLEtBQVA7QUFDRDs7QUFFRCxTQUFTWCxhQUFULENBQXVCSyxLQUF2QixFQUE4QkMsSUFBOUIsRUFBb0M7QUFDbEMsTUFBTUMsV0FBVyxHQUFHRixLQUFLLENBQUNHLE1BQTFCO0FBQUEsTUFDTUMsU0FBUyxHQUFHRixXQUFXLEdBQUcsQ0FEaEM7O0FBR0EsT0FBSyxJQUFJRyxLQUFLLEdBQUdELFNBQWpCLEVBQTRCQyxLQUFLLElBQUksQ0FBckMsRUFBd0NBLEtBQUssRUFBN0MsRUFBaUQ7QUFDL0MsUUFBTWYsT0FBTyxHQUFHVSxLQUFLLENBQUNLLEtBQUQsQ0FBckI7QUFBQSxRQUNNQyxNQUFNLEdBQUdMLElBQUksQ0FBQ1gsT0FBRCxFQUFVZSxLQUFWLENBRG5COztBQUdBLFFBQUlDLE1BQUosRUFBWTtBQUNWLGFBQU8sSUFBUDtBQUNEO0FBQ0Y7O0FBRUQsU0FBTyxLQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldE5leHRTaWJsaW5nKGVsZW1lbnQpIHtcbiAgbGV0IG5leHRTaWJsaW5nID0gbnVsbDtcblxuICBjb25zdCBzaWJsaW5ncyA9IGVsZW1lbnQucGFyZW50LmNoaWxkcmVuOyAvLy9cblxuICBiYWNrd2FyZHNTb21lKHNpYmxpbmdzLCAoc2libGluZykgPT4ge1xuICAgIGlmIChzaWJsaW5nID09PSBlbGVtZW50KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBuZXh0U2libGluZyA9IHNpYmxpbmc7XG4gIH0pO1xuXG4gIHJldHVybiBuZXh0U2libGluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByZXZpb3VzU2libGluZyhlbGVtZW50KSB7XG4gIGxldCBwcmV2aW91c1NpYmxpbmcgPSBudWxsO1xuXG4gIGNvbnN0IHNpYmxpbmdzID0gZWxlbWVudC5wYXJlbnQuY2hpbGRyZW47IC8vL1xuXG4gIGZvcndhcmRzU29tZShzaWJsaW5ncywgKHNpYmxpbmcpID0+IHtcbiAgICBpZiAoc2libGluZyA9PT0gZWxlbWVudCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHJldmlvdXNTaWJsaW5nID0gc2libGluZztcbiAgfSk7XG5cbiAgcmV0dXJuIHByZXZpb3VzU2libGluZztcbn1cblxuZnVuY3Rpb24gZm9yd2FyZHNTb21lKGFycmF5LCB0ZXN0KSB7XG4gIGNvbnN0IGFycmF5TGVuZ3RoID0gYXJyYXkubGVuZ3RoLFxuICAgICAgICBsYXN0SW5kZXggPSBhcnJheUxlbmd0aCAtIDE7XG5cbiAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8PSBsYXN0SW5kZXg7IGluZGV4KyspIHtcbiAgICBjb25zdCBlbGVtZW50ID0gYXJyYXlbaW5kZXhdLFxuICAgICAgICAgIHJlc3VsdCA9IHRlc3QoZWxlbWVudCwgaW5kZXgpO1xuXG4gICAgaWYgKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBiYWNrd2FyZHNTb21lKGFycmF5LCB0ZXN0KSB7XG4gIGNvbnN0IGFycmF5TGVuZ3RoID0gYXJyYXkubGVuZ3RoLFxuICAgICAgICBsYXN0SW5kZXggPSBhcnJheUxlbmd0aCAtIDE7XG5cbiAgZm9yIChsZXQgaW5kZXggPSBsYXN0SW5kZXg7IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICBjb25zdCBlbGVtZW50ID0gYXJyYXlbaW5kZXhdLFxuICAgICAgICAgIHJlc3VsdCA9IHRlc3QoZWxlbWVudCwgaW5kZXgpO1xuXG4gICAgaWYgKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuIl19